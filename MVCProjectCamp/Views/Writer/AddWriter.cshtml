@model EntityLayer.Concrete.Writer

@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>New Writer Page</h2>
<br />
@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("Writer Name")
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName, null, new { @class = "text-danger" })
        <br />
        @Html.Label("Writer SurName")
        @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurName, null, new { @class = "text-danger" })
        <br />
        @Html.Label("Writer Mail")
        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterMail, null, new { @class = "text-danger" })
        <br />
        @Html.Label("Writer Picture Link")
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage, null, new { @class = "text-danger" })
        <br />
        @Html.Label("Writer Title")
        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterTitle, null, new { @class = "text-danger" })
        <br />
        @Html.Label("About Writer")
        @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout, null, new { @class = "text-danger" })
        <br />
        <button class="btn btn-info">Add Writer</button>
    </div>
}
